{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Juliana\\\\Documents\\\\NLW5\\\\aulas\\\\podcastrnext\\\\src\\\\pages\\\\index.tsx\";\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { api } from '../services/api';\nimport { convertDurationToTimeString } from '../utils/convertDurationToTimeString';\nexport default function Home({\n  latestEpisodes,\n  allEpisodes\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: JSON.stringify(props.episodes)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticProps = async () => {\n  // Chamada de dados\n  const {\n    data\n  } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _oder: 'desc'\n    }\n  }); // formatação de dados\n\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM yy', {\n        locale: ptBR\n      }),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n      description: episode.description,\n      url: episode.file.url\n    };\n  });\n  const latestEpisodes = episodes.slice(0, 2);\n  const allEpisodes = episodes.slice(2, episodes.length);\n  return {\n    props: {\n      latestEpisodes,\n      allEpisodes\n    },\n    revalidate: 60 * 60 * 8\n  };\n};","map":{"version":3,"sources":["C:/Users/Juliana/Documents/NLW5/aulas/podcastrnext/src/pages/index.tsx"],"names":["format","parseISO","ptBR","api","convertDurationToTimeString","Home","latestEpisodes","allEpisodes","JSON","stringify","props","episodes","getStaticProps","data","get","params","_limit","_sort","_oder","map","episode","id","title","thumbnail","members","publishedAt","published_at","locale","duration","Number","file","durationAsString","description","url","slice","length","revalidate"],"mappings":";;AAEA,SAAQA,MAAR,EAAgBC,QAAhB,QAA+B,UAA/B;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,2BAAT,QAA4C,sCAA5C;AAuBA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA,cAAD;AAAiBC,EAAAA;AAAjB,CAAd,EAAwD;AACrE,sBACE;AAAA,2BACE;AAAA,gBAAIC,IAAI,CAACC,SAAL,CAAeC,KAAK,CAACC,QAArB;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;AAED,OAAO,MAAMC,cAA8B,GAAG,YAAY;AACxD;AACA,QAAM;AAACC,IAAAA;AAAD,MAAS,MAAMV,GAAG,CAACW,GAAJ,CAAQ,UAAR,EAAoB;AACvCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,KAAK,EAAE,cAFD;AAGNC,MAAAA,KAAK,EAAE;AAHD;AAD+B,GAApB,CAArB,CAFwD,CAUxD;;AACA,QAAMP,QAAQ,GAAGE,IAAI,CAACM,GAAL,CAASC,OAAO,IAAI;AACnC,WAAM;AACJC,MAAAA,EAAE,EAAED,OAAO,CAACC,EADR;AAEJC,MAAAA,KAAK,EAAEF,OAAO,CAACE,KAFX;AAGJC,MAAAA,SAAS,EAAEH,OAAO,CAACG,SAHf;AAIJC,MAAAA,OAAO,EAAEJ,OAAO,CAACI,OAJb;AAKJC,MAAAA,WAAW,EAAEzB,MAAM,CAACC,QAAQ,CAACmB,OAAO,CAACM,YAAT,CAAT,EAAiC,UAAjC,EAA6C;AAAEC,QAAAA,MAAM,EAAEzB;AAAV,OAA7C,CALf;AAMJ0B,MAAAA,QAAQ,EAAEC,MAAM,CAACT,OAAO,CAACU,IAAR,CAAaF,QAAd,CANZ;AAOJG,MAAAA,gBAAgB,EAAE3B,2BAA2B,CAACyB,MAAM,CAACT,OAAO,CAACU,IAAR,CAAaF,QAAd,CAAP,CAPzC;AAQJI,MAAAA,WAAW,EAAEZ,OAAO,CAACY,WARjB;AASJC,MAAAA,GAAG,EAAEb,OAAO,CAACU,IAAR,CAAaG;AATd,KAAN;AAWD,GAZgB,CAAjB;AAcA,QAAM3B,cAAc,GAAGK,QAAQ,CAACuB,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAvB;AACA,QAAM3B,WAAW,GAAGI,QAAQ,CAACuB,KAAT,CAAe,CAAf,EAAkBvB,QAAQ,CAACwB,MAA3B,CAApB;AAEA,SAAM;AACJzB,IAAAA,KAAK,EAAC;AACJJ,MAAAA,cADI;AAEJC,MAAAA;AAFI,KADF;AAKJ6B,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU;AALlB,GAAN;AAOD,CAnCM","sourcesContent":["import { GetStaticProps } from 'next';\nimport Image from 'next/image';\nimport {format, parseISO} from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { api } from '../services/api';\nimport { convertDurationToTimeString } from '../utils/convertDurationToTimeString';\n\nimport styles from './home.module.scss';\n\n// TypeScript\ntype Episode = {\n  id: string,\n  title: string,\n  thumbnail: string,\n  members: string,\n  publishedAt: string,\n  duration: number,\n  durationAsString: string,\n  description: string,\n  url: string,\n}\n\n// TypeScript\ntype HomeProps = {\n  latestEpisodes: Episode[];\n  allEpisodes: Episode[];\n}\n\nexport default function Home({latestEpisodes, allEpisodes}: HomeProps) {\n  return (\n    <div>\n      <p>{JSON.stringify(props.episodes)}</p>\n    </div>\n  )\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  // Chamada de dados\n  const {data} = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _oder: 'desc'\n    }\n  })\n\n  // formatação de dados\n  const episodes = data.map(episode => {\n    return{\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM yy', { locale: ptBR }),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n      description: episode.description,\n      url: episode.file.url,\n    };\n  })\n\n  const latestEpisodes = episodes.slice(0, 2);\n  const allEpisodes = episodes.slice(2, episodes.length);\n\n  return{\n    props:{\n      latestEpisodes,\n      allEpisodes,\n    },\n    revalidate: 60 * 60 * 8,\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}