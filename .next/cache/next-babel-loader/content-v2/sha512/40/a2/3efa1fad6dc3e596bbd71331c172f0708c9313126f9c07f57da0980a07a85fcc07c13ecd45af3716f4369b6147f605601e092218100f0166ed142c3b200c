{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Juliana\\\\Documents\\\\GitHub\\\\Podcastr\\\\src\\\\contexts\\\\Player.Context.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nexport var PlayerContext = /*#__PURE__*/createContext({}); // definir o fromato do valor\n\nexport function PlayerContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      episodeList = _useState[0],\n      setEpisodeList = _useState[1];\n\n  var _useState2 = useState(0),\n      currentEpisodeIndex = _useState2[0],\n      setCurrentEpisodeIndex = _useState2[1];\n\n  var _useState3 = useState(false),\n      isPlaying = _useState3[0],\n      setIsPlaying = _useState3[1];\n\n  function play(episode) {\n    setEpisodeList([episode]);\n    setCurrentEpisodeIndex(0);\n    setIsPlaying(true);\n  }\n\n  function playList(list, index) {\n    setEpisodeList(list);\n    setCurrentEpisodeIndex(index);\n    setIsPlaying(true);\n  }\n\n  function togglePlay() {\n    setIsPlaying(!isPlaying);\n  }\n\n  function setPlayingState(state) {\n    setIsPlaying(state);\n  }\n\n  var hasPrevious = currentEpisodeIndex > 0;\n  var hasNext = currentEpisodeIndex + 1 < episodeList.length;\n\n  function playNext() {\n    if (hasNext) {\n      setCurrentEpisodeIndex(currentEpisodeIndex + 1);\n    }\n  }\n\n  function playPrevious() {\n    if (hasPrevious) {\n      setCurrentEpisodeIndex(currentEpisodeIndex - 1);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: {\n      episodeList: episodeList,\n      currentEpisodeIndex: currentEpisodeIndex,\n      play: play,\n      playList: playList,\n      isPlaying: isPlaying,\n      playNext: playNext,\n      playPrevious: playPrevious,\n      togglePlay: togglePlay,\n      setPlayingState: setPlayingState,\n      hasPrevious: hasPrevious,\n      hasNext: hasNext\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlayerContextProvider, \"LrQXJ4YCuKXOoMsmvRtpeyylJ9U=\");\n\n_c = PlayerContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerContextProvider\");","map":{"version":3,"sources":["C:/Users/Juliana/Documents/GitHub/Podcastr/src/contexts/Player.Context.tsx"],"names":["createContext","useState","PlayerContext","PlayerContextProvider","children","episodeList","setEpisodeList","currentEpisodeIndex","setCurrentEpisodeIndex","isPlaying","setIsPlaying","play","episode","playList","list","index","togglePlay","setPlayingState","state","hasPrevious","hasNext","length","playNext","playPrevious"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAmD,OAAnD;AAwBA,OAAO,IAAMC,aAAa,gBAAGF,aAAa,CAAC,EAAD,CAAnC,C,CAA8D;;AAMrE,OAAO,SAASG,qBAAT,OAAuE;AAAA;;AAAA,MAAvCC,QAAuC,QAAvCA,QAAuC;;AAAA,kBACtCH,QAAQ,CAAC,EAAD,CAD8B;AAAA,MACrEI,WADqE;AAAA,MACxDC,cADwD;;AAAA,mBAEtBL,QAAQ,CAAC,CAAD,CAFc;AAAA,MAErEM,mBAFqE;AAAA,MAEhDC,sBAFgD;;AAAA,mBAG1CP,QAAQ,CAAC,KAAD,CAHkC;AAAA,MAGrEQ,SAHqE;AAAA,MAG1DC,YAH0D;;AAK5E,WAASC,IAAT,CAAcC,OAAd,EAAuB;AACrBN,IAAAA,cAAc,CAAC,CAACM,OAAD,CAAD,CAAd;AACAJ,IAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAED,WAASG,QAAT,CAAkBC,IAAlB,EAAmCC,KAAnC,EAAkD;AAChDT,IAAAA,cAAc,CAACQ,IAAD,CAAd;AACAN,IAAAA,sBAAsB,CAACO,KAAD,CAAtB;AACAL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAED,WAASM,UAAT,GAAqB;AACnBN,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD;;AAED,WAASQ,eAAT,CAAyBC,KAAzB,EAAwC;AACtCR,IAAAA,YAAY,CAACQ,KAAD,CAAZ;AACD;;AAED,MAAMC,WAAW,GAAGZ,mBAAmB,GAAG,CAA1C;AACA,MAAMa,OAAO,GAAIb,mBAAmB,GAAG,CAAvB,GAA4BF,WAAW,CAACgB,MAAxD;;AAEA,WAASC,QAAT,GAAmB;AACjB,QAAGF,OAAH,EAAW;AACTZ,MAAAA,sBAAsB,CAACD,mBAAmB,GAAG,CAAvB,CAAtB;AACD;AACF;;AAED,WAASgB,YAAT,GAAuB;AACrB,QAAGJ,WAAH,EAAe;AACbX,MAAAA,sBAAsB,CAACD,mBAAmB,GAAG,CAAvB,CAAtB;AACD;AACF;;AAED,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EACH;AACEF,MAAAA,WAAW,EAAXA,WADF;AAEEE,MAAAA,mBAAmB,EAAnBA,mBAFF;AAGEI,MAAAA,IAAI,EAAJA,IAHF;AAIEE,MAAAA,QAAQ,EAARA,QAJF;AAKEJ,MAAAA,SAAS,EAATA,SALF;AAMEa,MAAAA,QAAQ,EAARA,QANF;AAOEC,MAAAA,YAAY,EAAZA,YAPF;AAQEP,MAAAA,UAAU,EAAVA,UARF;AASEC,MAAAA,eAAe,EAAfA,eATF;AAUEE,MAAAA,WAAW,EAAXA,WAVF;AAWEC,MAAAA,OAAO,EAAPA;AAXF,KAFJ;AAAA,cAgBGhB;AAhBH;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA5DeD,qB;;KAAAA,qB","sourcesContent":["import { createContext, useState, ReactNode } from 'react';\r\n\r\ntype Episode = {\r\n  title: string,\r\n  members: string,\r\n  thumbnail: string,\r\n  duration: number,\r\n  url: string,\r\n}\r\n\r\ntype PlayerContextData= {\r\n  episodeList: Episode[];\r\n  currentEpisodeIndex: number;\r\n  isPlaying: boolean;\r\n  play: (episode: Episode) => void;\r\n  playList: (list: Episode[], index: number) => void;\r\n  setPlayingState: (state: boolean) => void;\r\n  togglePlay: () => void;\r\n  playNext: () => void;\r\n  playPrevious: () => void;\r\n  hasPrevious: boolean,\r\n  hasNext: boolean\r\n}\r\n\r\nexport const PlayerContext = createContext({} as PlayerContextData); // definir o fromato do valor\r\n\r\ntype PlayerContextProviderProps = {\r\n  children: ReactNode;\r\n}\r\n\r\nexport function PlayerContextProvider({children}: PlayerContextProviderProps) {\r\n  const [episodeList, setEpisodeList] = useState([]);\r\n  const [currentEpisodeIndex, setCurrentEpisodeIndex] = useState(0);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  function play(episode) {\r\n    setEpisodeList([episode]);\r\n    setCurrentEpisodeIndex(0);\r\n    setIsPlaying(true);\r\n  }\r\n\r\n  function playList(list: Episode[], index: number) {\r\n    setEpisodeList(list);\r\n    setCurrentEpisodeIndex(index);\r\n    setIsPlaying(true);\r\n  }\r\n\r\n  function togglePlay(){\r\n    setIsPlaying(!isPlaying);\r\n  }\r\n\r\n  function setPlayingState(state: boolean){\r\n    setIsPlaying(state);\r\n  }\r\n\r\n  const hasPrevious = currentEpisodeIndex > 0;\r\n  const hasNext = (currentEpisodeIndex + 1) < episodeList.length;\r\n\r\n  function playNext(){\r\n    if(hasNext){\r\n      setCurrentEpisodeIndex(currentEpisodeIndex + 1);\r\n    }\r\n  }\r\n\r\n  function playPrevious(){\r\n    if(hasPrevious){\r\n      setCurrentEpisodeIndex(currentEpisodeIndex - 1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PlayerContext.Provider \r\n      value={\r\n        { \r\n          episodeList, \r\n          currentEpisodeIndex, \r\n          play, \r\n          playList,\r\n          isPlaying,\r\n          playNext,\r\n          playPrevious,\r\n          togglePlay, \r\n          setPlayingState,\r\n          hasPrevious,\r\n          hasNext\r\n        }\r\n      }>\r\n      {children}\r\n    </PlayerContext.Provider>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}