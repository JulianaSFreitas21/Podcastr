{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Juliana\\\\Documents\\\\NLW5\\\\aulas\\\\podcastrnext\\\\src\\\\pages\\\\index.tsx\";\nimport Image from 'next/image';\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { api } from '../services/api';\nimport { convertDurationToTimeString } from '../utils/convertDurationToTimeString';\nimport styles from './home.module.scss'; // TypeScript\n\nexport default function Home({\n  latestEpisodes,\n  allEpisodes\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.homepage,\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.latestEpisodes,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\xDAltimos lan\\xE7amentos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: latestEpisodes.map(episode => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              width: 192,\n              height: 192,\n              src: episode.thumbnail,\n              alt: episode.title,\n              objectFit: \"cover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.episodeDetails,\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"\",\n                children: episode.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: episode.members\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: episode.publishedAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: episode.durationAsString\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/play-green.svg\",\n                alt: \"Tocar epis\\xF3dio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, episode.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.allEpisodes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticProps = async () => {\n  // Chamada de dados\n  const {\n    data\n  } = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _oder: 'desc'\n    }\n  }); // formatação de dados\n\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM yy', {\n        locale: ptBR\n      }),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n      description: episode.description,\n      url: episode.file.url\n    };\n  });\n  const latestEpisodes = episodes.slice(0, -2);\n  const allEpisodes = episodes.slice(2, episodes.length);\n  return {\n    props: {\n      latestEpisodes,\n      allEpisodes\n    },\n    revalidate: 60 * 60 * 8\n  };\n};","map":{"version":3,"sources":["C:/Users/Juliana/Documents/NLW5/aulas/podcastrnext/src/pages/index.tsx"],"names":["Image","format","parseISO","ptBR","api","convertDurationToTimeString","styles","Home","latestEpisodes","allEpisodes","homepage","map","episode","thumbnail","title","episodeDetails","members","publishedAt","durationAsString","id","getStaticProps","data","get","params","_limit","_sort","_oder","episodes","published_at","locale","duration","Number","file","description","url","slice","length","props","revalidate"],"mappings":"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","sourcesContent":["import { GetStaticProps } from 'next';\nimport Image from 'next/image';\nimport {format, parseISO} from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { api } from '../services/api';\nimport { convertDurationToTimeString } from '../utils/convertDurationToTimeString';\n\nimport styles from './home.module.scss';\n\n// TypeScript\ntype Episode = {\n  id: string,\n  title: string,\n  thumbnail: string,\n  members: string,\n  publishedAt: string,\n  duration: number,\n  durationAsString: string,\n  description: string,\n  url: string,\n}\n\n// TypeScript\ntype HomeProps = {\n  latestEpisodes: Episode[];\n  allEpisodes: Episode[];\n}\n\nexport default function Home({latestEpisodes, allEpisodes}: HomeProps) {\n  return (\n    <div className={styles.homepage}>\n      <section className={styles.latestEpisodes}>\n        \n        <h2>Últimos lançamentos</h2>\n\n        <ul>\n          {latestEpisodes.map(episode => {\n            return(\n              <li key={episode.id}>\n                <Image \n                  width={192}   \n                  height={192} \n                  src={episode.thumbnail} \n                  alt={episode.title}\n                  objectFit=\"cover\"\n                />\n\n                <div className={styles.episodeDetails}>\n                  <a href=\"\">{episode.title}</a>\n                  <p>{episode.members}</p>\n                  <span>{episode.publishedAt}</span>\n                  <span>{episode.durationAsString}</span>\n                </div>\n                <button type=\"button\">\n                  <img src=\"/play-green.svg\" alt=\"Tocar episódio\"/>\n                </button>\n              </li>\n            )\n          })}\n        </ul>\n      </section>\n      <section className={styles.allEpisodes}>\n\n      </section>\n    </div>\n  )\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  // Chamada de dados\n  const {data} = await api.get('episodes', {\n    params: {\n      _limit: 12,\n      _sort: 'published_at',\n      _oder: 'desc'\n    }\n  })\n\n  // formatação de dados\n  const episodes = data.map(episode => {\n    return{\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), 'd MMM yy', { locale: ptBR }),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDurationToTimeString(Number(episode.file.duration)),\n      description: episode.description,\n      url: episode.file.url,\n    };\n  })\n\n  const latestEpisodes = episodes.slice(0, -2);\n  const allEpisodes = episodes.slice(2, episodes.length);\n  \n  return{\n    props:{\n      latestEpisodes,\n      allEpisodes\n    },\n    revalidate: 60 * 60 * 8,\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}