{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Juliana\\\\Documents\\\\GitHub\\\\Podcastr\\\\src\\\\components\\\\Player\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport Image from 'next/image';\nimport { useRef, useEffect, useState } from 'react';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { usePlayer } from '../../contexts/Player.Context';\nimport styles from './styles.module.scss';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nexport function Player() {\n  _s();\n\n  var _episode$duration;\n\n  var audioRef = useRef(null); // boa prática porque enquanto não tocar nada, esse vai ser o valor\n\n  var _useState = useState(0),\n      progress = _useState[0],\n      setProgress = _useState[1];\n\n  var _usePlayer = usePlayer(),\n      episodeList = _usePlayer.episodeList,\n      currentEpisodeIndex = _usePlayer.currentEpisodeIndex,\n      isPlaying = _usePlayer.isPlaying,\n      isLooping = _usePlayer.isLooping,\n      isShuffling = _usePlayer.isShuffling,\n      togglePlay = _usePlayer.togglePlay,\n      toggleLoop = _usePlayer.toggleLoop,\n      toggleShuffle = _usePlayer.toggleShuffle,\n      setPlayingState = _usePlayer.setPlayingState,\n      playNext = _usePlayer.playNext,\n      playPrevious = _usePlayer.playPrevious,\n      hasPrevious = _usePlayer.hasPrevious,\n      hasNext = _usePlayer.hasNext;\n\n  useEffect(function () {\n    if (!audioRef.current) {\n      // current é o valor da referência no React\n      return;\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n\n  function setupProgressListener() {\n    audioRef.current.currentTime = 0;\n    audioRef.current.addEventListener('timeupdate', function () {\n      setProgress(Math.floor(audioRef.current.currentTime));\n    });\n  }\n\n  function handleSeek(amount) {\n    audioRef.current.currentTime = amount;\n  }\n\n  var episode = episodeList[currentEpisodeIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playerContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/playing.svg\",\n        alt: \"Tocando agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Tocando agora \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), episode ?\n    /*#__PURE__*/\n    // se existe algo em episode faça isso\n    _jsxDEV(\"div\", {\n      className: styles.currentEpisode,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        width: 592,\n        height: 592,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // senão faça isso\n    _jsxDEV(\"div\", {\n      className: styles.emptyPlayer,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Selecione um podcastr para ouvir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: !episode ? styles.empty : '',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString(progress)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), episode ? /*#__PURE__*/_jsxDEV(Slider, {\n          max: episode.duration // como está rodando em segundos, o valor máximo é em segundos\n          ,\n          value: progress,\n          onChange: handleSeek,\n          trackStyle: {\n            backgroundColor: '#04d361'\n          },\n          railStyle: {\n            backgroundColor: '#9f75ff'\n          },\n          handleStyle: {\n            borderColor: '#04d361',\n            borderWidth: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.slider,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emptySlider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: convertDurationToTimeString((_episode$duration = episode === null || episode === void 0 ? void 0 : episode.duration) !== null && _episode$duration !== void 0 ? _episode$duration : 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), episode &&\n      /*#__PURE__*/\n      // && para fazer somente if verdadeiro e || para else\n      _jsxDEV(\"audio\", {\n        src: episode.url,\n        ref: audioRef,\n        autoPlay: true,\n        loop: isLooping,\n        onPlay: function onPlay() {\n          return setPlayingState(true);\n        },\n        onPause: function onPause() {\n          return setPlayingState(false);\n        },\n        onLoadedMetadata: setupProgressListener\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode || episodeList.length === 1,\n          onClick: toggleShuffle,\n          className: isShuffling ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/shuffle.svg\",\n            alt: \"Embaralhar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playPrevious,\n          disabled: !episode || !hasPrevious,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-previous.svg\",\n            alt: \"Tocar anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.playButton,\n          disabled: !episode,\n          onClick: togglePlay,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/pause.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: playNext,\n          disabled: !episode || !hasNext,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-next.svg\",\n            alt: \"Tocar Pr\\xF3xima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          onClick: toggleLoop,\n          className: isLooping ? styles.isActive : '',\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/repeat.svg\",\n            alt: \"Repetir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Player, \"RwURxavjZMMGHra7m3dmBX2zDg4=\", false, function () {\n  return [usePlayer];\n});\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["C:/Users/Juliana/Documents/GitHub/Podcastr/src/components/Player/index.tsx"],"names":["Image","useRef","useEffect","useState","Slider","usePlayer","styles","convertDurationToTimeString","Player","audioRef","progress","setProgress","episodeList","currentEpisodeIndex","isPlaying","isLooping","isShuffling","togglePlay","toggleLoop","toggleShuffle","setPlayingState","playNext","playPrevious","hasPrevious","hasNext","current","play","pause","setupProgressListener","currentTime","addEventListener","Math","floor","handleSeek","amount","episode","playerContainer","currentEpisode","thumbnail","title","members","emptyPlayer","empty","duration","backgroundColor","borderColor","borderWidth","slider","emptySlider","url","buttons","length","isActive","playButton"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,4BAAP;AAEA,SAAQC,SAAR,QAAwB,+BAAxB;AAEA,OAAOC,MAAP,MAAoB,sBAApB;AACA,SAASC,2BAAT,QAA4C,yCAA5C;AAEA,OAAO,SAASC,MAAT,GAAkB;AAAA;;AAAA;;AACvB,MAAMC,QAAQ,GAAER,MAAM,CAAmB,IAAnB,CAAtB,CADuB,CACyB;;AADzB,kBAESE,QAAQ,CAAC,CAAD,CAFjB;AAAA,MAEhBO,QAFgB;AAAA,MAENC,WAFM;;AAAA,mBAkBnBN,SAAS,EAlBU;AAAA,MAKrBO,WALqB,cAKrBA,WALqB;AAAA,MAMrBC,mBANqB,cAMrBA,mBANqB;AAAA,MAOrBC,SAPqB,cAOrBA,SAPqB;AAAA,MAQrBC,SARqB,cAQrBA,SARqB;AAAA,MASrBC,WATqB,cASrBA,WATqB;AAAA,MAUrBC,UAVqB,cAUrBA,UAVqB;AAAA,MAWrBC,UAXqB,cAWrBA,UAXqB;AAAA,MAYrBC,aAZqB,cAYrBA,aAZqB;AAAA,MAarBC,eAbqB,cAarBA,eAbqB;AAAA,MAcrBC,QAdqB,cAcrBA,QAdqB;AAAA,MAerBC,YAfqB,cAerBA,YAfqB;AAAA,MAgBrBC,WAhBqB,cAgBrBA,WAhBqB;AAAA,MAiBrBC,OAjBqB,cAiBrBA,OAjBqB;;AAoBvBtB,EAAAA,SAAS,CAAC,YAAK;AACb,QAAG,CAACO,QAAQ,CAACgB,OAAb,EAAqB;AAAE;AACrB;AACD;;AACD,QAAIX,SAAJ,EAAe;AACbL,MAAAA,QAAQ,CAACgB,OAAT,CAAiBC,IAAjB;AACD,KAFD,MAEK;AACHjB,MAAAA,QAAQ,CAACgB,OAAT,CAAiBE,KAAjB;AACD;AACF,GATQ,EASN,CAACb,SAAD,CATM,CAAT;;AAWA,WAASc,qBAAT,GAAiC;AAC/BnB,IAAAA,QAAQ,CAACgB,OAAT,CAAiBI,WAAjB,GAA+B,CAA/B;AAEApB,IAAAA,QAAQ,CAACgB,OAAT,CAAiBK,gBAAjB,CAAkC,YAAlC,EAAgD,YAAM;AACpDnB,MAAAA,WAAW,CAACoB,IAAI,CAACC,KAAL,CAAWvB,QAAQ,CAACgB,OAAT,CAAiBI,WAA5B,CAAD,CAAX;AACD,KAFD;AAGD;;AAED,WAASI,UAAT,CAAoBC,MAApB,EAAmC;AACjCzB,IAAAA,QAAQ,CAACgB,OAAT,CAAiBI,WAAjB,GAA+BK,MAA/B;AACD;;AAED,MAAMC,OAAO,GAAGvB,WAAW,CAACC,mBAAD,CAA3B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEP,MAAM,CAAC8B,eAAvB;AAAA,4BACE;AAAA,8BACE;AAAK,QAAA,GAAG,EAAC,cAAT;AAAwB,QAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAMID,OAAO;AAAA;AAAK;AACZ;AAAK,MAAA,SAAS,EAAE7B,MAAM,CAAC+B,cAAvB;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,EAAG,GADV;AAEE,QAAA,MAAM,EAAG,GAFX;AAGE,QAAA,GAAG,EAAEF,OAAO,CAACG,SAHf;AAIE,QAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,kBAASH,OAAO,CAACI;AAAjB;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAA,kBAAOJ,OAAO,CAACK;AAAf;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADO;AAAA;AAWH;AACJ;AAAK,MAAA,SAAS,EAAElC,MAAM,CAACmC,WAAvB;AAAA,6BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAlBJ,eAuBE;AAAQ,MAAA,SAAS,EAAE,CAACN,OAAD,GAAU7B,MAAM,CAACoC,KAAjB,GAAwB,EAA3C;AAAA,8BACE;AAAK,QAAA,SAAS,EAAGpC,MAAM,CAACI,QAAxB;AAAA,gCACA;AAAA,oBAAOH,2BAA2B,CAACG,QAAD;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADA,EAEIyB,OAAO,gBACP,QAAC,MAAD;AACE,UAAA,GAAG,EAAEA,OAAO,CAACQ,QADf,CACyB;AADzB;AAEE,UAAA,KAAK,EAAEjC,QAFT;AAGE,UAAA,QAAQ,EAAEuB,UAHZ;AAIE,UAAA,UAAU,EAAE;AAAEW,YAAAA,eAAe,EAAE;AAAnB,WAJd;AAKE,UAAA,SAAS,EAAE;AAAEA,YAAAA,eAAe,EAAE;AAAnB,WALb;AAME,UAAA,WAAW,EAAE;AAAEC,YAAAA,WAAW,EAAE,SAAf;AAA0BC,YAAAA,WAAW,EAAE;AAAvC;AANf;AAAA;AAAA;AAAA;AAAA,gBADO,gBAUP;AAAK,UAAA,SAAS,EAAExC,MAAM,CAACyC,MAAvB;AAAA,iCACE;AAAK,YAAA,SAAS,EAAEzC,MAAM,CAAC0C;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAgBE;AAAA,oBAAOzC,2BAA2B,sBAAC4B,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEQ,QAAV,iEAAsB,CAAtB;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAoBIR,OAAO;AAAA;AAAM;AACb;AACE,QAAA,GAAG,EAAEA,OAAO,CAACc,GADf;AAEE,QAAA,GAAG,EAAExC,QAFP;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,IAAI,EAAEM,SAJR;AAKE,QAAA,MAAM,EAAE;AAAA,iBAAMK,eAAe,CAAC,IAAD,CAArB;AAAA,SALV;AAME,QAAA,OAAO,EAAE;AAAA,iBAAMA,eAAe,CAAC,KAAD,CAArB;AAAA,SANX;AAOE,QAAA,gBAAgB,EAAEQ;AAPpB;AAAA;AAAA;AAAA;AAAA,cArBJ,eAgCE;AAAK,QAAA,SAAS,EAAEtB,MAAM,CAAC4C,OAAvB;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,QAAQ,EAAE,CAACf,OAAD,IAAYvB,WAAW,CAACuC,MAAZ,KAAuB,CAF/C;AAGE,UAAA,OAAO,EAAEhC,aAHX;AAIE,UAAA,SAAS,EAAEH,WAAW,GAAGV,MAAM,CAAC8C,QAAV,GAAqB,EAJ7C;AAAA,iCAME;AAAK,YAAA,GAAG,EAAC,cAAT;AAAwB,YAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAuB,UAAA,OAAO,EAAE9B,YAAhC;AAA8C,UAAA,QAAQ,EAAE,CAACa,OAAD,IAAY,CAACZ,WAArE;AAAA,iCACE;AAAK,YAAA,GAAG,EAAC,oBAAT;AAA8B,YAAA,GAAG,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF,eAYE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAEjB,MAAM,CAAC+C,UAFpB;AAGE,UAAA,QAAQ,EAAE,CAAClB,OAHb;AAIE,UAAA,OAAO,EAAElB,UAJX;AAAA,oBAMIH,SAAS,gBACP;AAAK,YAAA,GAAG,EAAC,YAAT;AAAsB,YAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,kBADO,gBAEP;AAAK,YAAA,GAAG,EAAC,WAAT;AAAqB,YAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AARN;AAAA;AAAA;AAAA;AAAA,gBAZF,eAuBE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEO,QAA/B;AAAyC,UAAA,QAAQ,EAAE,CAACc,OAAD,IAAY,CAACX,OAAhE;AAAA,iCACE;AAAK,YAAA,GAAG,EAAC,gBAAT;AAA0B,YAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAvBF,eA0BE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,QAAQ,EAAE,CAACW,OAFb;AAGE,UAAA,OAAO,EAAEjB,UAHX;AAIE,UAAA,SAAS,EAAEH,SAAS,GAAGT,MAAM,CAAC8C,QAAV,GAAqB,EAJ3C;AAAA,iCAME;AAAK,YAAA,GAAG,EAAC,aAAT;AAAuB,YAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,gBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8FD;;GA3Ie5C,M;UAkBVH,S;;;KAlBUG,M","sourcesContent":["import Image from 'next/image';\r\nimport { useRef, useEffect, useState} from 'react';\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css'\r\n\r\nimport {usePlayer} from '../../contexts/Player.Context';\r\n\r\nimport styles from  './styles.module.scss';\r\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\r\n\r\nexport function Player() {\r\n  const audioRef= useRef<HTMLAudioElement>(null); // boa prática porque enquanto não tocar nada, esse vai ser o valor\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const {\r\n    episodeList, \r\n    currentEpisodeIndex, \r\n    isPlaying, \r\n    isLooping,\r\n    isShuffling,\r\n    togglePlay,\r\n    toggleLoop,\r\n    toggleShuffle,\r\n    setPlayingState, \r\n    playNext, \r\n    playPrevious,\r\n    hasPrevious,\r\n    hasNext\r\n  } = usePlayer();\r\n\r\n  useEffect(()=> {\r\n    if(!audioRef.current){ // current é o valor da referência no React\r\n      return;\r\n    }\r\n    if (isPlaying) {\r\n      audioRef.current.play();\r\n    }else{\r\n      audioRef.current.pause();\r\n    }\r\n  }, [isPlaying])\r\n\r\n  function setupProgressListener() {\r\n    audioRef.current.currentTime = 0;\r\n\r\n    audioRef.current.addEventListener('timeupdate', () => {\r\n      setProgress(Math.floor(audioRef.current.currentTime));\r\n    });\r\n  }\r\n\r\n  function handleSeek(amount: number){\r\n    audioRef.current.currentTime = amount;\r\n  }\r\n\r\n  const episode = episodeList[currentEpisodeIndex];\r\n\r\n  return(\r\n    <div className={styles.playerContainer}>\r\n      <header>\r\n        <img src=\"/playing.svg\" alt=\"Tocando agora\"/>\r\n        <strong>Tocando agora </strong>\r\n      </header>\r\n\r\n      { episode ? ( // se existe algo em episode faça isso\r\n        <div className={styles.currentEpisode}>\r\n          <Image\r\n            width ={592}\r\n            height ={592}\r\n            src={episode.thumbnail}\r\n            objectFit=\"cover\"  \r\n          />\r\n          <strong>{episode.title}</strong>\r\n          <span>{episode.members}</span>\r\n        </div>\r\n      ) : ( // senão faça isso\r\n        <div className={styles.emptyPlayer}>\r\n         <strong>Selecione um podcastr para ouvir</strong>\r\n        </div>\r\n      ) }\r\n\r\n      <footer className={!episode? styles.empty: ''}>\r\n        <div className= {styles.progress}>\r\n        <span>{convertDurationToTimeString(progress)}</span>\r\n          { episode ? (\r\n            <Slider\r\n              max={episode.duration} // como está rodando em segundos, o valor máximo é em segundos\r\n              value={progress}\r\n              onChange={handleSeek}\r\n              trackStyle={{ backgroundColor: '#04d361' }}\r\n              railStyle={{ backgroundColor: '#9f75ff' }}\r\n              handleStyle={{ borderColor: '#04d361', borderWidth: 4 }}\r\n            />\r\n          ) : (\r\n            <div className={styles.slider}>\r\n              <div className={styles.emptySlider} />\r\n            </div>  \r\n          ) }\r\n          <span>{convertDurationToTimeString(episode?.duration ?? 0)}</span>\r\n        </div>\r\n\r\n        { episode && ( // && para fazer somente if verdadeiro e || para else\r\n          <audio \r\n            src={episode.url}\r\n            ref={audioRef}\r\n            autoPlay\r\n            loop={isLooping}\r\n            onPlay={() => setPlayingState(true)}\r\n            onPause={() => setPlayingState(false)}\r\n            onLoadedMetadata={setupProgressListener}\r\n          />\r\n        )}\r\n\r\n        <div className={styles.buttons}>\r\n          <button \r\n            type=\"button\" \r\n            disabled={!episode || episodeList.length === 1}\r\n            onClick={toggleShuffle}\r\n            className={isShuffling ? styles.isActive : ''}\r\n          >\r\n            <img src=\"/shuffle.svg\" alt=\"Embaralhar\"/>\r\n          </button>\r\n          <button type=\"button\"  onClick={playPrevious} disabled={!episode || !hasPrevious}>\r\n            <img src=\"/play-previous.svg\" alt=\"Tocar anterior\"/>\r\n          </button>\r\n          <button \r\n            type=\"button\" \r\n            className={styles.playButton} \r\n            disabled={!episode} \r\n            onClick={togglePlay}\r\n          >\r\n            { isPlaying\r\n              ? <img src=\"/pause.svg\" alt=\"Tocar\"/>\r\n              : <img src=\"/play.svg\" alt=\"Tocar\"/>\r\n            }\r\n          </button>\r\n          <button type=\"button\" onClick={playNext} disabled={!episode || !hasNext}>\r\n            <img src=\"/play-next.svg\" alt=\"Tocar Próxima\"/>\r\n          </button>\r\n          <button \r\n            type=\"button\" \r\n            disabled={!episode}\r\n            onClick={toggleLoop}\r\n            className={isLooping ? styles.isActive : ''}\r\n          >\r\n            <img src=\"/repeat.svg\" alt=\"Repetir\"/>\r\n          </button>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}