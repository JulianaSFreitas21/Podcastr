{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Juliana\\\\Documents\\\\GitHub\\\\Podcastr\\\\podcastrnext\\\\src\\\\componets\\\\Player\\\\index.tsx\";\nimport Image from 'next/image';\nimport { useContext, useRef, useEffect } from 'react';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { PlayerContext } from '../../contexts/Player.Context';\nimport styles from './styles.module.scss';\nexport function Player() {\n  const audioRef = useRef(null); // boa prática porque enquanto não tocar nada, esse vai ser o valor\n\n  const {\n    episodeList,\n    currentEpisodeIndex,\n    isPlaying,\n    togglePlay\n  } = useContext(PlayerContext);\n  useEffect(() => {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (isPlaying) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [isPlaying]);\n  const episode = episodeList[currentEpisodeIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.playerContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/playing.svg\",\n        alt: \"Tocando agora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Tocando agora \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), episode ?\n    /*#__PURE__*/\n    // se existe algo em episode faça isso\n    _jsxDEV(\"div\", {\n      className: styles.currentEpisode,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        width: 592,\n        height: 592,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // senão faça isso\n    _jsxDEV(\"div\", {\n      className: styles.emptyPlayer,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Selecione um podcastr para ouvir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: !episode ? styles.empty : '',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.progress,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"00:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), episode ? /*#__PURE__*/_jsxDEV(Slider, {\n          trackStyle: {\n            backgroundColor: '#04d361'\n          },\n          railStyle: {\n            backgroundColor: '#9f75ff'\n          },\n          handleStyle: {\n            borderColor: '#04d361',\n            borderWidth: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.slider,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.emptySlider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"00:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), episode &&\n      /*#__PURE__*/\n      // && para fazer somente if verdadeiro e || para else\n      _jsxDEV(\"audio\", {\n        src: episode.url,\n        ref: audioRef,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/shuffle.svg\",\n            alt: \"Embaralhar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-previous.svg\",\n            alt: \"Tocar anterior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: styles.playButton,\n          disabled: !episode,\n          onClick: togglePlay,\n          children: isPlaying ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/pause.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play.svg\",\n            alt: \"Tocar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/play-next.svg\",\n            alt: \"Tocar Pr\\xF3xima\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: !episode,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/repeat.svg\",\n            alt: \"Repetir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Juliana/Documents/GitHub/Podcastr/podcastrnext/src/componets/Player/index.tsx"],"names":["Image","useContext","useRef","useEffect","Slider","PlayerContext","styles","Player","audioRef","episodeList","currentEpisodeIndex","isPlaying","togglePlay","current","play","pause","episode","playerContainer","currentEpisode","thumbnail","title","members","emptyPlayer","empty","progress","backgroundColor","borderColor","borderWidth","slider","emptySlider","url","buttons","playButton"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,SAAQC,UAAR,EAAoBC,MAApB,EAA4BC,SAA5B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,4BAAP;AAEA,SAAQC,aAAR,QAA4B,+BAA5B;AAEA,OAAOC,MAAP,MAAoB,sBAApB;AAEA,OAAO,SAASC,MAAT,GAAkB;AACvB,QAAMC,QAAQ,GAAEN,MAAM,CAAmB,IAAnB,CAAtB,CADuB,CACyB;;AAEhD,QAAM;AACJO,IAAAA,WADI;AAEJC,IAAAA,mBAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA;AAJI,MAKFX,UAAU,CAACI,aAAD,CALd;AAOAF,EAAAA,SAAS,CAAC,MAAK;AACb,QAAG,CAACK,QAAQ,CAACK,OAAb,EAAqB;AACnB;AACD;;AACD,QAAIF,SAAJ,EAAe;AACbH,MAAAA,QAAQ,CAACK,OAAT,CAAiBC,IAAjB;AACD,KAFD,MAEK;AACHN,MAAAA,QAAQ,CAACK,OAAT,CAAiBE,KAAjB;AACD;AACF,GATQ,EASN,CAACJ,SAAD,CATM,CAAT;AAWA,QAAMK,OAAO,GAAGP,WAAW,CAACC,mBAAD,CAA3B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEJ,MAAM,CAACW,eAAvB;AAAA,4BACE;AAAA,8BACE;AAAK,QAAA,GAAG,EAAC,cAAT;AAAwB,QAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAMID,OAAO;AAAA;AAAK;AACZ;AAAK,MAAA,SAAS,EAAEV,MAAM,CAACY,cAAvB;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,EAAG,GADV;AAEE,QAAA,MAAM,EAAG,GAFX;AAGE,QAAA,GAAG,EAAEF,OAAO,CAACG,SAHf;AAIE,QAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,kBAASH,OAAO,CAACI;AAAjB;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAA,kBAAOJ,OAAO,CAACK;AAAf;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADO;AAAA;AAWH;AACJ;AAAK,MAAA,SAAS,EAAEf,MAAM,CAACgB,WAAvB;AAAA,6BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAlBJ,eAuBE;AAAQ,MAAA,SAAS,EAAE,CAACN,OAAD,GAAUV,MAAM,CAACiB,KAAjB,GAAwB,EAA3C;AAAA,8BACE;AAAK,QAAA,SAAS,EAAGjB,MAAM,CAACkB,QAAxB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEIR,OAAO,gBACP,QAAC,MAAD;AACE,UAAA,UAAU,EAAE;AAAES,YAAAA,eAAe,EAAE;AAAnB,WADd;AAEE,UAAA,SAAS,EAAE;AAAEA,YAAAA,eAAe,EAAE;AAAnB,WAFb;AAGE,UAAA,WAAW,EAAE;AAAEC,YAAAA,WAAW,EAAE,SAAf;AAA0BC,YAAAA,WAAW,EAAE;AAAvC;AAHf;AAAA;AAAA;AAAA;AAAA,gBADO,gBAOP;AAAK,UAAA,SAAS,EAAErB,MAAM,CAACsB,MAAvB;AAAA,iCACE;AAAK,YAAA,SAAS,EAAEtB,MAAM,CAACuB;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATJ,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAiBIb,OAAO;AAAA;AAAM;AACb;AACE,QAAA,GAAG,EAAEA,OAAO,CAACc,GADf;AAEE,QAAA,GAAG,EAAEtB,QAFP;AAGE,QAAA,QAAQ;AAHV;AAAA;AAAA;AAAA;AAAA,cAlBJ,eAyBE;AAAK,QAAA,SAAS,EAAEF,MAAM,CAACyB,OAAvB;AAAA,gCACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,QAAQ,EAAE,CAACf,OAAjC;AAAA,iCACE;AAAK,YAAA,GAAG,EAAC,cAAT;AAAwB,YAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,QAAQ,EAAE,CAACA,OAAjC;AAAA,iCACE;AAAK,YAAA,GAAG,EAAC,oBAAT;AAA8B,YAAA,GAAG,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAEV,MAAM,CAAC0B,UAFpB;AAGE,UAAA,QAAQ,EAAE,CAAChB,OAHb;AAIE,UAAA,OAAO,EAAEJ,UAJX;AAAA,oBAMID,SAAS,gBACP;AAAK,YAAA,GAAG,EAAC,YAAT;AAAsB,YAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,kBADO,gBAEP;AAAK,YAAA,GAAG,EAAC,WAAT;AAAqB,YAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AARN;AAAA;AAAA;AAAA;AAAA,gBAPF,eAkBE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,QAAQ,EAAE,CAACK,OAAjC;AAAA,iCACE;AAAK,YAAA,GAAG,EAAC,gBAAT;AAA0B,YAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAlBF,eAqBE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,QAAQ,EAAE,CAACA,OAAjC;AAAA,iCACE;AAAK,YAAA,GAAG,EAAC,aAAT;AAAuB,YAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6ED","sourcesContent":["import Image from 'next/image';\r\nimport {useContext, useRef, useEffect} from 'react';\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css'\r\n\r\nimport {PlayerContext} from '../../contexts/Player.Context';\r\n\r\nimport styles from  './styles.module.scss';\r\n\r\nexport function Player() {\r\n  const audioRef= useRef<HTMLAudioElement>(null); // boa prática porque enquanto não tocar nada, esse vai ser o valor\r\n\r\n  const {\r\n    episodeList, \r\n    currentEpisodeIndex, \r\n    isPlaying, \r\n    togglePlay\r\n  } = useContext(PlayerContext);\r\n\r\n  useEffect(()=> {\r\n    if(!audioRef.current){\r\n      return;\r\n    }\r\n    if (isPlaying) {\r\n      audioRef.current.play();\r\n    }else{\r\n      audioRef.current.pause();\r\n    }\r\n  }, [isPlaying])\r\n\r\n  const episode = episodeList[currentEpisodeIndex];\r\n\r\n  return(\r\n    <div className={styles.playerContainer}>\r\n      <header>\r\n        <img src=\"/playing.svg\" alt=\"Tocando agora\"/>\r\n        <strong>Tocando agora </strong>\r\n      </header>\r\n\r\n      { episode ? ( // se existe algo em episode faça isso\r\n        <div className={styles.currentEpisode}>\r\n          <Image\r\n            width ={592}\r\n            height ={592}\r\n            src={episode.thumbnail}\r\n            objectFit=\"cover\"  \r\n          />\r\n          <strong>{episode.title}</strong>\r\n          <span>{episode.members}</span>\r\n        </div>\r\n      ) : ( // senão faça isso\r\n        <div className={styles.emptyPlayer}>\r\n         <strong>Selecione um podcastr para ouvir</strong>\r\n        </div>\r\n      ) }\r\n\r\n      <footer className={!episode? styles.empty: ''}>\r\n        <div className= {styles.progress}>\r\n          <span>00:00</span>\r\n          { episode ? (\r\n            <Slider \r\n              trackStyle={{ backgroundColor: '#04d361' }}\r\n              railStyle={{ backgroundColor: '#9f75ff' }}\r\n              handleStyle={{ borderColor: '#04d361', borderWidth: 4 }}\r\n            />\r\n          ) : (\r\n            <div className={styles.slider}>\r\n              <div className={styles.emptySlider} />\r\n            </div>  \r\n          ) }\r\n          <span>00:00</span>\r\n        </div>\r\n\r\n        { episode && ( // && para fazer somente if verdadeiro e || para else\r\n          <audio \r\n            src={episode.url}\r\n            ref={audioRef}\r\n            autoPlay\r\n          />\r\n        )}\r\n\r\n        <div className={styles.buttons}>\r\n          <button type=\"button\" disabled={!episode}>\r\n            <img src=\"/shuffle.svg\" alt=\"Embaralhar\"/>\r\n          </button>\r\n          <button type=\"button\" disabled={!episode}>\r\n            <img src=\"/play-previous.svg\" alt=\"Tocar anterior\"/>\r\n          </button>\r\n          <button \r\n            type=\"button\" \r\n            className={styles.playButton} \r\n            disabled={!episode} \r\n            onClick={togglePlay}\r\n          >\r\n            { isPlaying\r\n              ? <img src=\"/pause.svg\" alt=\"Tocar\"/>\r\n              : <img src=\"/play.svg\" alt=\"Tocar\"/>\r\n            }\r\n          </button>\r\n          <button type=\"button\" disabled={!episode}>\r\n            <img src=\"/play-next.svg\" alt=\"Tocar Próxima\"/>\r\n          </button>\r\n          <button type=\"button\" disabled={!episode}>\r\n            <img src=\"/repeat.svg\" alt=\"Repetir\"/>\r\n          </button>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}